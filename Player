import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;

public class Player {
    public static int count = 0;
    private String name;
    private int age;
    private String position;
    private double height;
    private double weight;
    private double salary;
    private String condition = "Healthy";
    private double pointsPerGame;
    private double reboundsPerGame;
    private double assistsPerGame;
    private double stealsPerGame;
    private double blocksPerGame;

    public Player(int id) {
        String url = "jdbc:mysql://localhost:3306/NBA";
        String user = "root";
        String password = "password";
        try (Connection connection = DriverManager.getConnection(url, user, password);
             Statement statement = connection.createStatement()) {
            String query = "SELECT * FROM nba_player WHERE ID = " + id;
            try (ResultSet resultSet = statement.executeQuery(query)) {
                if (resultSet.next()) {
                    this.name = resultSet.getString("Name");
                    this.height = resultSet.getInt("Height") / 100;
                    this.weight = resultSet.getInt("Weight");
                    this.age = resultSet.getInt("Age");
                    this.salary = resultSet.getInt("Salary");
                    this.position = resultSet.getString("Position");
                    double gamesPlayed = resultSet.getInt("GP");
                    this.reboundsPerGame = round(resultSet.getInt("REB") / gamesPlayed);
                    this.assistsPerGame = round(resultSet.getInt("AST") / gamesPlayed);
                    this.stealsPerGame = round(resultSet.getInt("STL") / gamesPlayed);
                    this.blocksPerGame = round(resultSet.getInt("BLK") / gamesPlayed);
                    this.pointsPerGame = round(resultSet.getInt("PTS") / gamesPlayed);
                    System.out.println("New player created!");
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private double round(double value) {
        return Math.round(value * 10) / 10.0;
    }

    public void getInfo() {
        System.out.println("Name: " + this.name);
        System.out.println("Age: " + this.age);
        System.out.println("Height: " + this.height + " M");
        System.out.println("Weight: " + this.weight + " KG");
        System.out.println("Points Per Game: " + this.pointsPerGame);
        System.out.println("Assists Per Game: " + this.assistsPerGame);
        System.out.println("Rebounds Per Game: " + this.reboundsPerGame);
        System.out.println("Steals Per Game: " + this.stealsPerGame);
        System.out.println("Blocks Per Game: " + this.blocksPerGame);
    }

    // Getters and Setters
    public String getName() {
        return name;
    }

    public String getPosition() {
        return position;
    }

    public double getHeight() {
        return height;
    }

    public double getWeight() {
        return weight;
    }

    public double getSalary() {
        return salary;
    }

    public void setName(String name) {
        this.name = name;
    }

    public void setPosition(String position) {
        this.position = position;
    }

    public void setHeight(double height) {
        this.height = height;
    }

    public void setWeight(double weight) {
        this.weight = weight;
    }

    public void setSalary(double salary) {
        this.salary = salary;
    }

    public int getAge() {
        return age;
    }

    public void setAge(int age) {
        this.age = age;
    }

    public double getPointsPerGame() {
        return pointsPerGame;
    }

    public void setPointsPerGame(double pointsPerGame) {
        this.pointsPerGame = pointsPerGame;
    }

    public double getReboundsPerGame() {
        return reboundsPerGame;
    }

    public void setReboundsPerGame(double reboundsPerGame) {
        this.reboundsPerGame = reboundsPerGame;
    }

    public double getAssistsPerGame() {
        return assistsPerGame;
    }

    public void setAssistsPerGame(double assistsPerGame) {
        this.assistsPerGame = assistsPerGame;
    }

    public double getStealsPerGame() {
        return stealsPerGame;
    }

    public void setStealsPerGame(double stealsPerGame) {
        this.stealsPerGame = stealsPerGame;
    }

    public double getBlocksPerGame() {
        return blocksPerGame;
    }

    public void setBlocksPerGame(double blocksPerGame) {
        this.blocksPerGame = blocksPerGame;
    }

    public String getCondition() {
        return condition;
    }

    public void setCondition(String condition) {
        this.condition = condition;
    }
}
