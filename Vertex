import java.util.ArrayList;
public class Vertex <T extends Comparable<T>,N extends Comparable<N>>{
    //this is the NBA teams name
    T vertexInfo;
    //this is the NBA teams cities
    T vertexInfo2;
    int indeg;
    int outdeg;
    Vertex<T,N> nextVertex;
    Edge<T,N> firstEdge;
    //this is for gui purpose (x-axis)
    private int X;
    //this is for gui purpose (y-axis)
    private int Y;
    //this is for dfs and bfs searching purpose
    private boolean visited=false;
    //this is to find the level of the vertex (in bfs)
    private int parents=-2;
    //this is to find the path from beginning vertex to the current vertex for bfs
    private ArrayList<T> path=new ArrayList<>();
    
    public Vertex(){
        vertexInfo=null;
        vertexInfo2=null;
        indeg=0;
        outdeg=0;
        nextVertex=null;
        firstEdge=null;
    }
    public Vertex(T vInfo,Vertex<T,N> next){
        vertexInfo=vInfo;
        vertexInfo2=null;
        indeg=0;
        outdeg=0;
        nextVertex=next;
        firstEdge=null;
    }
    public Vertex(T vInfo,T vInfo2,Vertex<T,N> next){
        vertexInfo=vInfo;
        vertexInfo2=vInfo2;
        indeg=0;
        outdeg=0;
        nextVertex=next;
        firstEdge=null;
    }
    public boolean isVisited(){
        return visited;
    }
    public void setVisited(boolean v){
        visited=v;
    }
    public int isParents(){
        return parents;
    }
    public void setParents(int p){
       parents=p;
    }
    public ArrayList<T> isPath(){
        return path;
    }
    public void setPath(T p){
       path.add(p);
    }
    public void setCoordinate(int x,int y){
        X=x;
        Y=y;
    }
    public int getX(){
        return X;
    }
    public int getY(){
        return Y;
    }
}
